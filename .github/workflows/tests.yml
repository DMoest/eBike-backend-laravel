# This is a basic workflow to help you get started with Actions
name: CI
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ tests, master ]
  pull_request:
    branches: [ tests, master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Make Clean All Install Dependencies
      - name: Make clean-all install for application dependencies
        run: |
          cd backend
          make clean-all install
        env:
            APP_ENV: backend/env.test

      # Prepare ENV file for Laravel Application
      - name: Prepare Laravel application
        run: |
            cp backend/.env.test backend/.env
            cd backend
            php artisan key:generate
            php artisan optimize:clear

      # Cache yarn dependencies
      - name: Cache yarn dependencies
        uses: actions/cache@v1
        with:
            path: backend/node_modules
            key: yarn-${{ hashFiles('yarn.lock') }}

      # Install dependencies with yarn
      - name: Install dependencies with yarn
        run: |
          cd backend
          yarn
          yarn dev

      # Run Make tests
      - name: Make tests - code standard, code duplication, php mess detection, static analysis, phpunit & validation
        run: |
          cd backend
          make test

      # Store Build Log after container crashes
      - name: Upload artifacts
        uses: actions/upload-artifact@master
        if: failure()
        with:
            name: Logs
            path: ./backend//storage/logs
